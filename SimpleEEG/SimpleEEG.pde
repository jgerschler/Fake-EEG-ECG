//A VERY simple EEG simulator for basic classroom projects.
int xPos = 65;
int xPos1 = 65;
int xPos2 = 65;
int xPos3 = 65;
int xPos4 = 65;
int xPos5 = 65;
int xPos6 = 65;
int xPos7 = 65;
int xPos8 = 65;
int xPos9 = 65;
int xPos10 = 65;
int xPos11 = 65;
int xPos12 = 65;
int xPos13 = 65;
int xPos14 = 65;
int xPos15 = 65;
int lastxPos = 65;
int lastxPos1 = 65;
int lastxPos2 = 65;
int lastxPos3 = 65;
int lastxPos4 = 65;
int lastxPos5 = 65;
int lastxPos6 = 65;
int lastxPos7 = 65;
int lastxPos8 = 65;
int lastxPos9 = 65;
int lastxPos10 = 65;
int lastxPos11 = 65;
int lastxPos12 = 65;
int lastxPos13 = 65;
int lastxPos14 = 65;
int lastxPos15 = 65;
int lastheight = 744;
int lastheight1 = 696;
int lastheight2 = 648;
int lastheight3 = 600;
int lastheight4 = 552;
int lastheight5 = 504;
int lastheight6 = 456;
int lastheight7 = 408;
int lastheight8 = 360;
int lastheight9 = 312;
int lastheight10 = 264;
int lastheight11 = 216;
int lastheight12 = 168;
int lastheight13 = 120;
int lastheight14 = 72;
int lastheight15 = 24;
float inByte;
float inByte1;
float inByte2;
float inByte3;
float inByte4;
float inByte5;
float inByte6;
float inByte7;
float inByte8;
float inByte9;
float inByte10;
float inByte11;
float inByte12;
float inByte13;
float inByte14;
float inByte15;
PFont font;

void setup () {
  size(1024, 768);        
  background(255);
  font = createFont("Arial",16);
  textFont(font);
  frameRate(90);
}
void draw () {
  inByte = random(24,34);
  inByte1 = random(72,82);
  inByte2 = random(120,130);
  inByte3 = random(168,178);
  inByte4 = random(216,226);
  inByte5 = random(264,274);
  inByte6 = random(312,322);
  inByte7 = random(360,370);
  inByte8 = random(408,418);
  inByte9 = random(456,466);
  inByte10 = random(504,514);
  inByte11 = random(552,562);
  inByte12 = random(600,610);
  inByte13 = random(648,658);
  inByte14 = random(696,706);
  inByte15 = random(744,754);
  fill(0,0,128);
  text("F3",29,24);
  text("F4",29,72);
  text("C3",29,120);
  text("C4",29,168);
  text("P3",29,216);
  text("P4",29,264);
  text("F7",29,312);
  text("FP1",19,360);
  text("FP2",19,408);
  text("F8",29,456);
  text("FZ",29,504);
  text("CZ",29,552);
  text("PZ",29,600);
  text("VEOG",5,648);
  text("A2",29,696);
  text("HEOG",5,744);
  fill(0);
  stroke(0);
  strokeWeight(1);
  line(55,10,55,758);
  line(lastxPos, lastheight, xPos, height - inByte);
  line(lastxPos1, lastheight1, xPos1, height - inByte1);
  line(lastxPos2, lastheight2, xPos2, height - inByte2);
  line(lastxPos3, lastheight3, xPos3, height - inByte3);
  line(lastxPos4, lastheight4, xPos4, height - inByte4);
  line(lastxPos5, lastheight5, xPos5, height - inByte5);
  line(lastxPos6, lastheight6, xPos6, height - inByte6);
  line(lastxPos7, lastheight7, xPos7, height - inByte7);
  line(lastxPos8, lastheight8, xPos8, height - inByte8);
  line(lastxPos9, lastheight9, xPos9, height - inByte9);
  line(lastxPos10, lastheight10, xPos10, height - inByte10);
  line(lastxPos11, lastheight11, xPos11, height - inByte11);
  line(lastxPos12, lastheight12, xPos12, height - inByte12);
  line(lastxPos13, lastheight13, xPos13, height - inByte13);
  line(lastxPos14, lastheight14, xPos14, height - inByte14);
  line(lastxPos15, lastheight15, xPos15, height - inByte15);
  lastxPos = xPos;
  lastxPos1 = xPos1;
  lastxPos2 = xPos2;
  lastxPos3 = xPos3;
  lastxPos4 = xPos4;
  lastxPos5 = xPos5;
  lastxPos6 = xPos6;
  lastxPos7 = xPos7;
  lastxPos8 = xPos8;
  lastxPos9 = xPos9;
  lastxPos10 = xPos10;
  lastxPos11 = xPos11;
  lastxPos12 = xPos12;
  lastxPos13 = xPos13;
  lastxPos14 = xPos14;
  lastxPos15 = xPos15;
  lastheight = int(height-inByte);
  lastheight1 = int(height-inByte1);
  lastheight2 = int(height-inByte2);
  lastheight3 = int(height-inByte3);
  lastheight4 = int(height-inByte4);
  lastheight5 = int(height-inByte5);
  lastheight6 = int(height-inByte6);
  lastheight7 = int(height-inByte7);
  lastheight8 = int(height-inByte8);
  lastheight9 = int(height-inByte9);
  lastheight10 = int(height-inByte10);
  lastheight11 = int(height-inByte11);
  lastheight12 = int(height-inByte12);
  lastheight13 = int(height-inByte13);
  lastheight14 = int(height-inByte14);
  lastheight15 = int(height-inByte15);
  if (xPos >= width) {
    xPos = 65;
    xPos1 = 65;
    xPos2 = 65;
    xPos3 = 65;
    xPos4 = 65;
    xPos5 = 65;
    xPos6 = 65;
    xPos7 = 65;
    xPos8 = 65;
    xPos9 = 65;
    xPos10 = 65;
    xPos11 = 65;
    xPos12 = 65;
    xPos13 = 65;
    xPos14 = 65;
    xPos15 = 65;
    lastxPos = 65;
    lastxPos1 = 65;
    lastxPos2 = 65;
    lastxPos3 = 65;
    lastxPos4 = 65;
    lastxPos5 = 65;
    lastxPos6 = 65;
    lastxPos7 = 65;
    lastxPos8 = 65;
    lastxPos9 = 65;
    lastxPos10 = 65;
    lastxPos11 = 65;
    lastxPos12 = 65;
    lastxPos13 = 65;
    lastxPos14 = 65;
    lastxPos15 = 65;
    background(255);
    text("F3",29,24);
    text("F4",29,72);
    text("C3",29,120);
    text("C4",29,168);
    text("P3",29,216);
    text("P4",29,264);
    text("F7",29,312);
    text("FP1",19,360);
    text("FP2",19,408);
    text("F8",29,456);
    text("FZ",29,504);
    text("CZ",29,552);
    text("PZ",29,600);
    text("VEOG",5,648);
    text("A2",29,696);
    text("HEOG",5,744);
  } 
  else {
    xPos++;
    xPos1++;
    xPos2++;
    xPos3++;
    xPos4++;
    xPos5++;
    xPos6++;
    xPos7++;
    xPos8++;
    xPos9++;
    xPos10++;
    xPos11++;
    xPos12++;
    xPos13++;
    xPos14++;
    xPos15++;
  }
}